[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "qr-code-backup"
version = "2.0.0"
description = "Archive digital data as printable QR codes for long-term offline storage"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "QR Code Backup Contributors"}
]
keywords = [
    "qr-code",
    "backup",
    "archival",
    "offline-storage",
    "paper-backup",
    "encryption",
    "reed-solomon",
    "data-recovery"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
dependencies = [
    "qrcode>=7.4.2",
    "Pillow>=10.0.0",
    "pyzbar>=0.1.9",
    "pypdf>=3.0.0",
    "reportlab>=4.0.0",
    "pdf2image>=1.16.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "click>=8.1.0",
    "cryptography>=41.0.0",
    "argon2-cffi>=23.1.0",
    "reedsolo>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/YOUR_USERNAME/qr-code-backup"
Documentation = "https://github.com/YOUR_USERNAME/qr-code-backup#readme"
Repository = "https://github.com/YOUR_USERNAME/qr-code-backup"
Changelog = "https://github.com/YOUR_USERNAME/qr-code-backup/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/YOUR_USERNAME/qr-code-backup/issues"

[project.scripts]
qr-backup = "qr_code_backup:cli"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
]

[tool.coverage.run]
source = ["qr_code_backup"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
